package facultySelfService;

//Generated by Selenium IDE
import org.testng.annotations.Test;
import org.testng.collections.Lists;
import org.openqa.selenium.JavascriptExecutor;

import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.Assert;
import org.testng.annotations.Test;
import org.testng.AssertJUnit;
import org.testng.annotations.Test;
import org.testng.annotations.Test;
import org.testng.annotations.Test;
import org.testng.annotations.Test;
import org.testng.annotations.Test;
import static org.testng.AssertJUnit.assertFalse;
import static org.testng.AssertJUnit.assertTrue;
import org.testng.annotations.Test;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.regex.Pattern;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.assertThat;
import static org.testng.Assert.assertEquals;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.AssertJUnit;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.gargoylesoftware.htmlunit.ElementNotFoundException;
import com.gargoylesoftware.htmlunit.html.Keyboard;

import utils.FSSLoginUtility;
import utils.MeBannerLoginUtility;
import utils.log;

import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import java.io.FileNotFoundException;
 
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.JavascriptExecutor;


  
public class StudentSearchProfile extends FSSLoginUtility {
 	  private Map<String, Object> vars;
	  JavascriptExecutor js;
  
  
	@BeforeMethod


	public void setUp1() throws Exception {
		  log.info("START=Student Profile Search--------------------------------------------------------------");

 		 
		  FSSLoginUtilityyclass();
 		    vars = new HashMap<String, Object>();
	}

   
   
  @Test
  public void sasa()  throws  Exception {
	  
	  {
		   List<WebElement> elements = driver.findElements(By.xpath("//h1[contains(.,\'Faculty Services\')]"));
		   assert(elements.size() > 0);
		 }
	  
	  
	
	

    driver.findElement(By.linkText("Student Search")).click();
    Thread.sleep(2000);
	assertThat(driver.findElement(By.cssSelector(".is-size-2")).getText(), is("Student Search"));
	
    driver.findElement(By.id("Search")).sendKeys("mnasol");
    driver.findElement(By.cssSelector(".obu-button")).click();
	   Thread.sleep(2000);

    driver.findElement(By.cssSelector(".is-size-3")).click();
    driver.findElement(By.cssSelector(".container")).click();
    driver.findElement(By.id("Search")).clear();
    driver.findElement(By.id("Search")).sendKeys("oyedepo");
    driver.findElement(By.cssSelector(".obu-button")).click();
    Thread.sleep(2000);
   
    
    driver.findElement(By.xpath("//h2")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//h2[contains(.,\'Results\') or (\'\"\')]"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.cssSelector(".rt-th:nth-child(2) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".-sort-asc > .rt-resizable-header-content")).getText(), is("Student ID"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(3) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".-sort-asc > .rt-resizable-header-content")).getText(), is("Last Name"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(4) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".-sort-asc > .rt-resizable-header-content")).getText(), is("First Name"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(5) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".-sort-asc > .rt-resizable-header-content")).getText(), is("Course"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(6) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".rt-th:nth-child(6) > .rt-resizable-header-content")).getText(), is("Start Date"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(7) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".rt-th:nth-child(7) > .rt-resizable-header-content")).getText(), is("End Date"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(8) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".rt-th:nth-child(8) > .rt-resizable-header-content")).getText(), is("Student Profile"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(9) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".rt-th:nth-child(9) > .rt-resizable-header-content")).getText(), is("Record & Results"));
    driver.findElement(By.cssSelector(".rt-th:nth-child(10) > .rt-resizable-header-content")).click();
    assertThat(driver.findElement(By.cssSelector(".rt-th:nth-child(10) > .rt-resizable-header-content")).getText(), is("Programme Requirements"));
    assertThat(driver.findElement(By.cssSelector(".rt-tr-group:nth-child(1) .rt-td:nth-child(2)")).getText(), is("19225022"));
    assertThat(driver.findElement(By.linkText("Record & Results")).getText(), is("Record & Results"));
    assertThat(driver.findElement(By.linkText("Programme Requirements")).getText(), is("Programme Requirements"));
    assertThat(driver.findElement(By.cssSelector(".rt-tr-group:nth-child(1) .rt-td:nth-child(2)")).getText(), is("19225022"));
    
    log.info("Student Search successful ");

    
    
    
    
    
 
    String originalWindow = driver.getWindowHandle();    // THIS STORE CURRENT WINDOW 

    driver.findElement(By.linkText("Student Profile")).click();
    Thread.sleep(2000);
 
     for (String windowHandle : driver.getWindowHandles()) {
        if(!originalWindow.contentEquals(windowHandle)) {
            driver.switchTo().window(windowHandle);
            break;
        }
        
    }
     log.info("Switched to New TAB  ");

    
    
    
    driver.findElement(By.cssSelector(".popup-link")).click();
    driver.findElement(By.cssSelector(".studentProfileCard > .close")).click();
    driver.findElement(By.id("bioHeader")).click();
 
    driver.findElement(By.xpath("//strong[@class='col-sm-6 col-xs-6'][normalize-space()='Level:']"));
    driver.findElement(By.xpath("//div[@class='row no-margin standard-padding-bottom']//span[@class='col-sm-6 col-xs-6'][normalize-space()='Postgraduate']"));
    driver.findElement(By.xpath("//strong[normalize-space()='Class:']"));
    driver.findElement(By.xpath("//span[normalize-space()='Stage 1 Postgraduate']"));
    driver.findElement(By.xpath("//strong[normalize-space()='Status:']"));
    driver.findElement(By.xpath("//span[normalize-space()='Active']"));
 
     
    driver.findElement(By.cssSelector(".row:nth-child(1) > .row:nth-child(3) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(1) > .row:nth-child(4) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(1) > .row:nth-child(5) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(1) > .row:nth-child(5) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(2) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(2) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(3) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(3) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(4) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(4) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(5) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(2) > .row:nth-child(5) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(6) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row > .row:nth-child(6) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(7) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row > .row:nth-child(7) > .col-sm-6:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".row:nth-child(8) > .col-sm-6:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".row > .row:nth-child(8) > .col-sm-6:nth-child(2)")).click();
   driver.findElement(By.id("bottom_text"));
 
   driver.findElement(By.linkText("Curriculum and Courses")).click();
   driver.findElement(By.linkText("Curriculum and Courses")).click();
 
   
	 driver.findElement(By.linkText("Prior Education and Testing")).click();
	  driver.findElements(By.linkText("Prior Education and Testing"));
	    log.info("Checked 1 ");

	 assertThat(driver.findElement(By.cssSelector("#priorEducationHeading .panel-header-title")).getText(), is("PRIOR EDUCATION"));
	 assertThat(driver.findElement(By.cssSelector("#secondaryEducationTitle > .subtitle-text")).getText(), is("Secondary Education"));
	 assertThat(driver.findElement(By.id("postSecondaryEducationTitle")).getText(), is("Post Secondary Education"));
	 assertThat(driver.findElement(By.cssSelector("#testingHeader a > .panel-header-title")).getText(), is("TESTING"));
	   driver.findElements(By.id("additional_links"));
	   driver.findElements(By.linkText("Module Registration"));
	 
    driver.findElements(By.linkText("My Calendar"));
	  
 	  driver.findElements(By.linkText("Academic Transcript"));
 	 
 	  driver.findElements(By.linkText("Moodle"));
	 
 	 driver.findElement(By.cssSelector(".leaf-breadcrumb"));
     log.info("All Profile details checked ");

 	}
	 
   
 
     
   


private Object waitForWindow(int i) {
	// TODO Auto-generated method stub
	return null;
}
}
